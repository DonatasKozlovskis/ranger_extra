<!-- This launch file demonstrates the use of xtion ranger with rtabmap -->
<launch>

	<!-- time stamp for map and waypoints identification -->
	<arg name="time_stamp" default="1431251588881133079" />
	
	
    <arg name="rtabmapviz" default="true" /> 
    
	<arg name="map_folder" default="maps" />
	<arg name="path_map"  value="$(find ranger_extra)/$(arg map_folder)"/>
	

	<!-- file locations -->
	<arg name="file_map" default="$(arg path_map)/map_$(arg time_stamp).yaml"/>
	<arg name="file_waypoint" default="$(arg path_map)/waypoints_$(arg time_stamp)"/>
	
	<!-- load publishers for librarian gui -->
	<include file="$(find ranger_librarian)/launch/librarian.launch"/>
	
    <!-- Load load grid map -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg file_map)" />
    
	<!-- load node for localisation -->
	<group ns="rtabmap">
		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="log" args="" >

			<param name="subscribe_depth" type="bool" value="true"/>
			<param name="subscribe_laserScan" type="bool" value="true"/>
			<param name="frame_id" type="string" value="base_link"/>
			
			<!-- Remapping topics -->
			<remap from="odom" to="/odom"/>
			<remap from="scan" to="/scan"/>

			<remap from="rgb/image" 		to="/camera/rgb/image_rect_color"/>
			<remap from="depth/image" 		to="/camera/depth_registered/image_raw"/>
			<remap from="rgb/camera_info" 	to="/camera/rgb/camera_info"/>
			
			<!-- Used for synchronization of the input topics above in hz -->
			<param name="queue_size" type="int" value="10"/>
			<!-- Publish TF from /map to /odom. -->
			<param name="publish_tf" type="bool" value="true"/>	

			<!-- Database used for localization -->
			<param name="database_path" type="string" value="$(env HOME)/.ros/rtabmap_$(arg time_stamp).db"/>  
						
			<!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap params" to see the list of available parameters. -->
			<param name="Rtabmap/DetectionRate" type="string" value="2"/>     		    <!-- Don't need to do relocation very often! Though better results if the same rate as when mapping. -->	

			<param name="Mem/IncrementalMemory" type="string" value="false"/>			<!-- false = Localization mode-->
			<param name="Mem/STMSize" type="string" value="10"/>               			<!-- 10 location in short-term memory -->
			<param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
			<param name="Mem/InitWMWithAllNodes" type="string" value="true"/> 			<!-- Load the full global map in RAM -->
			<param name="RGBD/PoseScanMatching" type="string" value="false"/>  			<!-- no - Correct the odometry using the input laser topic using ICP-2D. -->
			
			<param name="LccIcp/Type" type="string" value="2"/>    						<!-- Loop closure transformation refining with ICP: 0=No ICP, 1=ICP 3D, 2=ICP 2D -->
			<param name="LccIcp2/CorrespondenceRatio" type="string" value="0.5"/>
			<param name="LccIcp2/VoxelSize" type="string" value="0.0"/>			
			<param name="LccIcp2/Iterations" type="string" value="100"/>
				
			<param name="LccBow/Force2D" type="string" value="true"/>		
			<param name="LccBow/MinInliers" type="string" value="3"/>
			<param name="LccBow/InlierDistance" type="string" value="0.05"/>			<!-- 3D visual words correspondence distance -->
			<param name="LccBow/MaxDepth" type="string" value="4.0"/>                 	<!-- 3D visual words maximum depth 0=infinity -->
			
			<param name="RGBD/AngularUpdate" type="string" value="0.01"/>             	<!-- Update map only if the robot is moving -->
			<param name="RGBD/LinearUpdate" type="string" value="0.01"/>              	<!-- Update map only if the robot is moving -->
			<param name="RGBD/LocalLoopDetectionSpace" type="string" value="false"/>   	<!-- Local loop closure detection (using estimated position) with locations in WM -->
			<param name="RGBD/LocalLoopDetectionTime" type="string" value="true"/>    	<!-- Local loop closure detection with locations in STM -->
			<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>    	<!-- Optimize graph from the latest node -->
			
			<param name="Mem/BadSignaturesIgnored" type="string" value="false"/>      	<!-- Don't ignore bad images for 3D node creation (e.g. white walls) -->

			<param name="Rtabmap/TimeThr" type="string" value="0"/>						<!-- Maximum time allowed for the detector (ms) (0=infinity) -->
			
			<param name="DbSqlite3/InMemory" type="string" value="true"/>           	<!-- Using database in the memory instead of a file on the hard disk -->					
			<param name="DbSqlite3/CacheSize" type="string" value="10000"/>           	<!-- Sqlite cache size (default is 2000) -->
			
			<!-- keypoints settings -->
			<param name="Kp/DetectorStrategy" type="string" value="0"/>					<!-- 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF -->
	        <param name="Kp/MaxDepth" type="string" value="4.0"/>						<!-- Maximum depth of the features is 4 meters -->
          	<param name="Kp/RoiRatios" type="string" value="0.0 0.0 0.0 0.0"/>			<!-- Filter 10% bottom of the image -->
 
 			<param name="SURF/HessianThreshold" type="string" value="60"/>				<!-- Extract more SURF features. Only features, whose hessian is larger than hessianThreshold are retained by the detector. Therefore, the larger the value, the less keypoints you will g -->
								
		</node>

		<!-- default rtabmap grid map assembler-->
		<node pkg="rtabmap_ros" type="grid_map_assembler" name="grid_map_assembler" output="screen">
			<remap from="grid_map" to="/map"/>
			<param name="scan_voxel_size" type="str" value="0.01" />
		</node>
		      
		<!-- Visualisation RTAB-Map enabled by arg-->
		<node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
			<param name="subscribe_depth" type="bool" value="true"/>
			<param name="subscribe_laserScan" type="bool" value="false"/>
			<param name="subscribe_odom_info" type="bool" value="false"/>
			<param name="queue_size" type="int" value="30"/>

			<remap from="rgb/image" 		to="/camera/rgb/image_rect_color"/>
			<remap from="depth/image" 		to="/camera/depth_registered/image_raw"/>
			<remap from="rgb/camera_info" 	to="/camera/depth_registered/camera_info"/>
			<remap from="odom" to="/odom"/>
		</node>
	</group>
    
	
	<include file="$(find ranger_extra)/launch/include/move_base.launch"/>
	
	<node pkg="ranger_extra" name="navigator"	type="navigator_librarian.py" output="screen" respawn="false">
		<param name="file_waypoint" value="$(arg file_waypoint)"/>
		<param name="fixed_frame" value="map"/>
	</node>
	

</launch>
