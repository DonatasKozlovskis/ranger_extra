<!-- This launch file demonstrates the use of xtion ranger with rtabmap -->
<launch>

	<!-- Xtion OpenNI on ranger -->
	<!-- laser simulation is included in 3dsensor.launch 
	<include file="$(find ranger_extra)/launch/3dsensor.launch"/>
	<include file="$(find ranger_extra)/launch/3dprocess.launch"/>
	-->
	<!-- Visual SLAM -->
	<!-- args: "delete_db_on_start" and "udebug" -->
	
	<!-- Choose visualization -->
	<arg name="rtabmapviz" default="true" /> 
	<!-- Choose visualization -->
	<arg name="rviz" default="true" />
	
	<group ns="rtabmap">
		<node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">

			<param name="subscribe_depth" type="bool" value="true"/>
			<param name="subscribe_laserScan" type="bool" value="true"/>
			<param name="frame_id" type="string" value="base_link"/>
			
			<!-- Remapping topics -->
			<remap from="odom" to="/odom"/>
			<remap from="scan" to="/scan"/>

			<remap from="rgb/image" 		to="/camera/rgb/image_rect_color"/>
			<remap from="depth/image" 		to="/camera/depth_registered/image_raw"/>
			<remap from="rgb/camera_info" 	to="/camera/rgb/camera_info"/>
			<!-- Used for synchronization of the input topics above in hz -->
			<param name="queue_size" type="int" value="10"/>
			
			<!-- Publish TF from /map to /odom. -->
			<param name="publish_tf" type="bool" value="true"/>						

			<!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap params" to see the list of available parameters. -->
			<param name="Mem/IncrementalMemory" type="string" value="true"/>          	<!-- true = Mapping/SLAM mode-->
			<param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
			<param name="RGBD/PoseScanMatching" type="string" value="true"/>  			<!-- Correct the odometry using the input laser topic using ICP-2D. -->
			<param name="LccIcp/Type" type="string" value="2"/>    						<!-- Loop closure transformation refining with ICP: 0=No ICP, 1=ICP 3D, 2=ICP 2D -->
			<param name="LccIcp2/CorrespondenceRatio" type="string" value="0.5"/>			
			<param name="LccBow/MinInliers" type="string" value="5"/>
			<param name="LccBow/InlierDistance" type="string" value="0.05"/>			<!-- 3D visual words correspondence distance -->
			<param name="LccBow/MaxDepth" type="string" value="4.0"/>                 	<!-- 3D visual words maximum depth 0=infinity -->

			<param name="RGBD/AngularUpdate" type="string" value="0.01"/>             	<!-- Update map only if the robot is moving -->
			<param name="RGBD/LinearUpdate" type="string" value="0.01"/>              	<!-- Update map only if the robot is moving -->

			<param name="Rtabmap/TimeThr" type="string" value="1000"/>
			

			<param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>    	<!-- Optimize graph from the latest node -->
			
	        <param name="Kp/MaxDepth" type="string" value="4.0"/>

			<param name="DbSqlite3/CacheSize" type="string" value="10000"/>           	<!-- Sqlite cache size (default is 2000) -->
		
		</node>
		<!-- default rtabmap grid map-->
        <node pkg="rtabmap_ros" type="grid_map_assembler" name="grid_map_assembler" output="screen">
               <!-- 
               <remap from="grid_map" to="/grid_map"/>
               -->
                <param name="scan_voxel_size" type="str" value="0.01" />
        </node>
        
        <!-- OPTIONAL - Visualization of point cloud for RVIZ -->
		<node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="load rtabmap_ros/point_cloud_xyzrgb standalone_nodelet">
			<remap from="rgb/image" 		to="/camera/rgb/image_rect_color"/>
			<remap from="depth/image" 		to="/camera/depth_registered/image_raw"/>
			<remap from="rgb/camera_info" 	to="/camera/rgb/camera_info"/>
			<!-- published topic-->
			<remap from="cloud"           	to="cloud" />
			<param name="voxel_size" type="double" value="0.01"/>
  		</node>
  		
		<!-- Visualisation RTAB-Map -->
		<node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
			<param name="subscribe_depth" type="bool" value="true"/>
			<param name="subscribe_odom_info" type="bool" value="false"/>

			<remap from="rgb/image" 		to="/camera/rgb/image_rect_color"/>
			<remap from="depth/image" 		to="/camera/depth_registered/image_raw"/>
			<remap from="rgb/camera_info" 	to="/camera/rgb/camera_info"/>
		</node>
  		
  		
    </group>
	<!-- include gmapping to create occupancy grid map-->
	<include file="$(find ranger_ros)/launch/create_map.launch"/>

</launch>
